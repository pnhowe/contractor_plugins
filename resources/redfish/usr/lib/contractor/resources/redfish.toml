sflinks = [ [ 'linux-base', 'redfish-base' ], [ 'manual-structure-base', 'redfish-base' ] ]

[ foundation.redfish-base ]
  description = 'Base Redfish'
  scripts = { 'create' = 'redfish-create', 'destroy' = 'redfish-destroy' }
  foundation_types = [ 'RedFish' ]
  config_values = {}
  template = {}
  physical_interface_names = [ 'eth0' ]

[ script.redfish-create ]
  description = 'Create RedFish Server'
  script = """# Test and Configure RedFish Server
foundation.wait_for_poweroff()

begin( description='Set RTC' )
  signaling.reset( pxe_name='set-rtc' )
  dhcp.set_pxe( interface=foundation.provisioning_interface, pxe='set-rtc' )
  foundation.power_on()
  delay( seconds=60 )
  signaling.wait_for_completion()
  foundation.wait_for_poweroff()
end

dhcp.set_pxe( interface=structure.provisioning_interface, pxe='normal-boot' )
"""

[ script.redfish-destroy ]
  description = 'Destroy RedFish Server'
  script = """# Decommission RedFish Server
foundation.power_off()

begin( description='Wipe Disks' )
  signaling.reset( pxe_name='disk-wipe' )
  dhcp.set_pxe( interface=foundation.provisioning_interface, pxe='disk-wipe' )
  foundation.power_on()
  delay( seconds=60 )
  signaling.wait_for_completion()
  foundation.wait_for_poweroff()
end

dhcp.set_pxe( interface=structure.provisioning_interface, pxe='normal-boot' )
"""
